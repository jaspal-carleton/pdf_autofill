/**
 * Main App
 */

/**
 * Module dependencies
 */
const app = require('../app/app');
const http = require('http');

/**
 * Store app's port in Express
 */
const port = normalizePort(app.locals.configs.port);
app.set('port', port);

/**
 * Create HTTP server
 */
const server = http.createServer(app);

/**
 * HTTP server listen on app's port
 */
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize app's port
 */
function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) {
    // return default port 5000
    return 5000;
  }
  if (port >= 0) {
    // port number
    return port;
  }
  return 5000;
}

/**
 * Error event listener for HTTP server
 */
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }
  const bind = typeof port === 'string' ?
    'Pipe ' + port :
    'Port ' + port;
  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Listening event listener for HTTP server
 */
function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string' ?
    'pipe ' + addr :
    'port ' + addr.port;
  console.log("Server running on http://localhost:" + port);
  console.log("\n");
}
